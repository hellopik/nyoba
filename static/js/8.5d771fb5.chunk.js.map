{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@coreui/utils/src/deep-objects-merge.js","views/charts/ChartLineSimple.js","views/charts/ChartBarSimple.js","../node_modules/@coreui/utils/src/get-color.js","views/widgets/WidgetsDropdown.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","deepObjectsMerge","target","source","keys","key","assign","ChartLineSimple","props","borderColor","backgroundColor","pointHoverBackgroundColor","dataPoints","label","pointed","attributes","pointHoverColor","defaultDatasets","data","getColor","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","apply","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","options","maintainAspectRatio","legend","computedDatasets","datasets","computedOptions","type","labels","defaultProps","ChartBarSimple","barPercentage","categoryPercentage","rawProperty","element","document","body","property","style","getStyle","Ikon","size","Popup","useState","modal","setModal","md","className","onClick","show","onClose","closeButton","WidgetsDropdown","alignHorizontal","header","footerSlot"],"mappings":"2NAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,iCILvF,SAASC,EAAkBtB,EAAKuB,IAClC,MAAPA,GAAeA,EAAMvB,EAAIkB,UAAQK,EAAMvB,EAAIkB,QAE/C,IAAK,IAAIjB,EAAI,EAAGuB,EAAO,IAAItB,MAAMqB,GAAMtB,EAAIsB,EAAKtB,IAC9CuB,EAAKvB,GAAKD,EAAIC,GAGhB,OAAOuB,EAPT,mC,iCCAA,+CACe,SAASC,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,YAAiBA,EAAGC,GACtD,IAAIC,EAAItB,OAAOuB,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoB1B,MAAMiC,KAAKP,GACxC,cAANA,GAAqB,2CAA2CQ,KAAKR,GAAW,YAAiBF,EAAGC,QAAxG,K,uECMaU,EAbU,SAAnBA,EAAoBC,EAAQC,GAEhC,cAAkBjC,OAAOkC,KAAKD,GAA9B,eAAuC,CAAlC,IAAME,EAAG,KACRF,EAAOE,aAAgBnC,QACzBA,OAAOoC,OAAOH,EAAOE,GAAMJ,EAAiBC,EAAOG,GAAMF,EAAOE,KAMpE,OADAnC,OAAOoC,OAAOJ,GAAU,GAAIC,GACrBD,G,SCLHK,EAAkB,SAAAC,GAAU,IAG9BC,EAOED,EAPFC,YACAC,EAMEF,EANFE,gBACAC,EAKEH,EALFG,0BACAC,EAIEJ,EAJFI,WACAC,EAGEL,EAHFK,MACAC,EAEEN,EAFFM,QACGC,EAT0B,YAU3BP,EAV2B,8FAYzBQ,EACAL,IAE2B,gBAApBD,EACFA,EAEFD,GAGHQ,EACG,CACL,CACEC,KAAMN,EACNH,YAAaU,YAASV,GACtBC,gBAAiBS,YAAST,GAC1BU,qBAAsBD,YAASH,GAC/BL,0BAA2BQ,YAASH,GACpCH,UAKAQ,EACG,CACLC,OAAQ,CACNC,MAAO,CACL,CACEC,QAAQ,EACRC,UAAW,CACTC,MAAO,cACPC,cAAe,eAEjBC,MAAO,CACLC,SAAU,EACVC,UAAW,iBAIjBC,MAAO,CACL,CACEC,SAAS,EACTJ,MAAO,CACLI,SAAS,EACTC,IAAKC,KAAKD,IAAIE,MAAMD,KAAMtB,GAAc,EACxCwB,IAAKF,KAAKE,IAAID,MAAMD,KAAMtB,GAAc,MAKhDyB,SAAU,CACRC,KAAM,CACJC,YAAa,GAEfC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,KAMfC,EACG,CACLtB,OAAQ,CACNC,MAAO,CAAC,CACNS,SAAS,IAEXD,MAAO,CAAC,CACNC,SAAS,KAGbK,SAAU,CACRC,KAAM,CACJC,YAAa,GAEfC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,KAMfE,EAAkB,WACtB,IAAMC,EAAUhC,EAAUO,EAAiBuB,EACzC,OAAO1E,OAAOoC,OAAO,GAAIwC,EAAS,CAChCC,qBAAqB,EACrBC,OAAQ,CACNhB,SAAS,KALO,GAUlBiB,EACGhD,EAAiBgB,EAAiBF,EAAWmC,UAAY,IAG5DC,EACGlD,EAAiB4C,EAAgB9B,EAAW+B,SAAW,IAKhE,OACE,kBAAC,IAAD,iBACM/B,EADN,CAEEqC,KAAK,OACLF,SAAUD,EACVH,QAASK,EACTE,OAAQxC,MAiBdN,EAAgB+C,aAAe,CAC7B7C,YAAa,wBACbC,gBAAiB,cACjBE,WAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzDC,MAAO,SAGMN,O,gFCnJTgD,EAAiB,SAAA/C,GAAU,IAG7BE,EAMEF,EANFE,gBACAC,EAKEH,EALFG,0BACAC,EAIEJ,EAJFI,WACAC,EAGEL,EAHFK,MAEGE,GACDP,EAFFM,QAP4B,YAS1BN,EAT0B,iFAWxBS,EACG,CACL,CACEC,KAAMN,EACNF,gBAAiBS,YAAST,GAC1BC,0BAA2BQ,YAASR,GACpCE,MAAOA,EACP2C,cAAe,GACfC,mBAAoB,IAKpBZ,EACG,CACLE,qBAAqB,EACrBC,OAAQ,CACNhB,SAAS,GAEXV,OAAQ,CACNC,MAAO,CAAC,CACNS,SAAS,IAEXD,MAAO,CAAC,CACNC,SAAS,MAOjB,OACE,kBAAC,IAAD,iBACMjB,EADN,CAEEqC,KAAK,MACLF,SAAUjC,EACV6B,QAASD,EACTQ,OAAQxC,MAgBd0C,EAAeD,aAAe,CAC5B5C,gBAAiB,iBACjBE,WAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzDC,MAAO,SAGM0C,O,iCC3Ef,aAQepC,IANE,SAACuC,GAAyC,IAA5BC,EAA4B,uDAAlBC,SAASC,KAC1CC,EAAW,KAAH,OAAQJ,GAChBK,EAAQC,YAASF,EAAUH,GACjC,OAAOI,GAAgBL,I,uFCgBnBO,G,cAAO,WAEX,OACD,kBAAC,IAAD,CAAOC,KAAM,KAAMpE,KAAM,gBAIpBqE,EAAQ,WAAO,IAAD,EAEQC,oBAAS,GAFjB,mBAEXC,EAFW,KAEJC,EAFI,KAInB,OACA,kBAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,oBACJ,kBAAC,IAAD,CACV9C,MAAM,OACN+C,QAAS,kBAAMH,GAAUD,KAFf,SAMd,kBAAC,KAAD,CAAQK,KAAML,EAAOM,QAASL,GACtB,kBAAC,KAAD,CAAcM,aAAW,GAAC,kBAAC,IAAD,CAAOV,KAAM,KAAMpE,KAAM,cAAc,wBAAIiE,MAAO,CAACrC,MAAO,UAAnB,mBACxE,kBAAC,KAAD,KACA,kBAAC,IAAD,CAASA,MAAM,WAAf,iBADA,IACiD,kBAAC,IAAD,CAASA,MAAM,WAAf,kBA2CzCmD,UA/BS,WAEtB,OACE,kBAAC,KAAD,CAAMC,gBAAgB,UACpB,kBAAC,IAAD,CAAMP,GAAG,KACP,kBAAC,KAAD,CACE7C,MAAM,mBACNqD,OAAO,iBAEPC,WACE,kBAACb,EAAD,OAGE,kBAACF,EAAD,QAGL,kBAAC,IAAD,CAAMM,GAAG,KACV,kBAAC,KAAD,CACE7C,MAAM,kBACNqD,OAAO,mBAEPC,WACE,kBAACb,EAAD,OAGE,kBAACF,EAAD","file":"static/js/8.5d771fb5.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","const deepObjectsMerge = (target, source) => {\r\n  // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\r\n  for (const key of Object.keys(source)) {\r\n    if (source[key] instanceof Object) {\r\n      Object.assign(source[key], deepObjectsMerge(target[key], source[key]))\r\n    }\r\n  }\r\n\r\n  // Join `target` and modified `source`\r\n  Object.assign(target || {}, source)\r\n  return target\r\n}\r\n\r\nexport default deepObjectsMerge\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor, deepObjectsMerge } from '@coreui/utils/src'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\n\r\nconst ChartLineSimple = props => {\r\n\r\n  const {\r\n    borderColor,\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const pointHoverColor = (()=>{\r\n    if (pointHoverBackgroundColor) {\r\n      return pointHoverBackgroundColor\r\n    } else if (backgroundColor !== 'transparent') {\r\n      return backgroundColor\r\n    }\r\n    return borderColor\r\n  })()\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        borderColor: getColor(borderColor),\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointBackgroundColor: getColor(pointHoverColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverColor),\r\n        label\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const pointedOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            offset: true,\r\n            gridLines: {\r\n              color: 'transparent',\r\n              zeroLineColor: 'transparent'\r\n            },\r\n            ticks: {\r\n              fontSize: 2,\r\n              fontColor: 'transparent'\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            display: false,\r\n            ticks: {\r\n              display: false,\r\n              min: Math.min.apply(Math, dataPoints) - 5,\r\n              max: Math.max.apply(Math, dataPoints) + 5\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 1\r\n        },\r\n        point: {\r\n          radius: 4,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const straightOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 2\r\n        },\r\n        point: {\r\n          radius: 0,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    const options = pointed ? pointedOptions : straightOptions\r\n      return Object.assign({}, options, {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        }\r\n      })\r\n  })()\r\n\r\n  const computedDatasets = (() => {\r\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\r\n  })()\r\n\r\n  const computedOptions = (() => {\r\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\r\n  })()\r\n\r\n  // render\r\n\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      type=\"line\"\r\n      datasets={computedDatasets}\r\n      options={computedOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartLineSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  borderColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartLineSimple.defaultProps = {\r\n  borderColor: 'rgba(255,255,255,.55)',\r\n  backgroundColor: 'transparent',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartLineSimple\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor } from '@coreui/utils/src'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\n\r\nconst ChartBarSimple = props => {\r\n\r\n  const {\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\r\n        label: label,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 1\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      }\r\n    }\r\n  })()\r\n\r\n  // render\r\n  return (\r\n    <CChartBar\r\n      {...attributes}\r\n      type=\"bar\"\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartBarSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartBarSimple.defaultProps = {\r\n  backgroundColor: 'rgba(0,0,0,.2)',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartBarSimple\r\n","import getStyle from './get-style'\r\n\r\nconst getColor = (rawProperty, element = document.body) => {\r\n  const property = `--${rawProperty}`\r\n  const style = getStyle(property, element)\r\n  return style ? style : rawProperty\r\n}\r\n\r\nexport default getColor\r\n","import React, { useState } from 'react'\r\nimport {\r\n  CWidgetDropdown,\r\n  CRow,\r\n\tCButton,\r\n  CCol,\r\n\tCPopover,\r\n  CDropdown,\r\n\tCModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownToggle\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport ChartLineSimple from '../charts/ChartLineSimple'\r\nimport ChartBarSimple from '../charts/ChartBarSimple'\r\n\r\nconst Ikon = () => {\r\n  // render\r\n  return (\r\n\t<CIcon size={'xl'} name={'cil-truck'}/>\r\n\t)\r\n}\r\n\t\r\nconst Popup = () => {\r\n\t\r\n  const [modal, setModal] = useState(false)\r\n\t\r\n\treturn (\r\n\t<CCol md=\"4\" className=\"py-4 text-center\" >\r\n                    <CButton \r\n\t\t\t\t\t\t\t\t\t\tcolor=\"info\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setModal(!modal)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPilih \r\n                    </CButton>\r\n\t\t\t\t\t\t<CModal show={modal} onClose={setModal}>\r\n              <CModalHeader closeButton><CIcon size={'lg'} name={'cil-truck'}/><h5 style={{color: 'black'}}>Jenis Kegiatan</h5></CModalHeader>\r\n\t\t\t\t\t\t\t<CModalBody>\r\n\t\t\t\t\t\t\t<CButton color=\"primary\">Keberangkatan</CButton> <CButton color=\"primary\">Kedatangan</CButton>\r\n              </CModalBody>\r\n\r\n            </CModal>\r\n\t\t\t\t\t\t                </CCol>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n}\r\n\r\n\r\n\t\r\nconst WidgetsDropdown = () => {\r\n  // render\r\n  return (\r\n    <CRow alignHorizontal=\"Center\">\r\n      <CCol md=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-primary\"\r\n          header=\"SSm Pengangkut\"\r\n\r\n          footerSlot={\r\n            <Popup/>\r\n          }\r\n        >\r\n              <Ikon/>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\t\t\t      <CCol md=\"4\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-danger\"\r\n          header=\"SSm Ekspor Impor\"\r\n\r\n          footerSlot={\r\n            <Popup/>\r\n          }\r\n        >\r\n              <Ikon/>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\nexport default WidgetsDropdown\r\n"],"sourceRoot":""}